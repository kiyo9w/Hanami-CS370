{
    "node_type": "ProgramNode",
    "statements": [
        {
            "node_type": "StyleIncludeStmt",
            "path": "\"iostream\""
        },
        {
            "node_type": "StyleIncludeStmt",
            "path": "\"string\""
        },
        {
            "node_type": "StyleIncludeStmt",
            "path": "\"vector\""
        },
        {
            "name": "TestGarden",
            "node_type": "GardenDeclStmt"
        },
        {
            "name": "Pet",
            "node_type": "SpeciesDeclStmt",
            "sections": [
                {
                    "block": {
                        "node_type": "BlockStmt",
                        "statements": [
                            {
                                "initializer": {
                                    "node_type": "StringLiteralExpr",
                                    "value": "Unknown"
                                },
                                "node_type": "VariableDeclStmt",
                                "typeName": "string",
                                "varName": "name"
                            },
                            {
                                "initializer": {
                                    "node_type": "NumberLiteralExpr",
                                    "value": ""
                                },
                                "node_type": "VariableDeclStmt",
                                "typeName": "int",
                                "varName": "age"
                            }
                        ]
                    },
                    "node_type": "VisibilityBlockStmt",
                    "visibility": 3
                },
                {
                    "block": {
                        "node_type": "BlockStmt",
                        "statements": [
                            {
                                "body": {
                                    "node_type": "BlockStmt",
                                    "statements": [
                                        {
                                            "expression": {
                                                "left": {
                                                    "name": "name",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "AssignmentStmt",
                                                "right": {
                                                    "name": "newName",
                                                    "node_type": "IdentifierExpr"
                                                }
                                            },
                                            "node_type": "ExpressionStmt"
                                        },
                                        {
                                            "expression": {
                                                "left": {
                                                    "name": "age",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "AssignmentStmt",
                                                "right": {
                                                    "name": "newAge",
                                                    "node_type": "IdentifierExpr"
                                                }
                                            },
                                            "node_type": "ExpressionStmt"
                                        },
                                        {
                                            "direction": 34,
                                            "expressions": [
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": "Pet details updated: Name="
                                                },
                                                {
                                                    "name": "name",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": ", Age="
                                                },
                                                {
                                                    "name": "age",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": "\\n"
                                                }
                                            ],
                                            "ioType": 8,
                                            "node_type": "IOStmt"
                                        },
                                        {
                                            "node_type": "ReturnStmt",
                                            "returnValue": null
                                        }
                                    ]
                                },
                                "name": "setDetails",
                                "node_type": "FunctionDefStmt",
                                "parameters": [
                                    {
                                        "paramName": "newName",
                                        "typeName": "string"
                                    },
                                    {
                                        "paramName": "newAge",
                                        "typeName": "int"
                                    }
                                ],
                                "returnType": "void"
                            },
                            {
                                "body": {
                                    "node_type": "BlockStmt",
                                    "statements": [
                                        {
                                            "direction": 34,
                                            "expressions": [
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": "Woof! My name is "
                                                },
                                                {
                                                    "name": "name",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": " and I am "
                                                },
                                                {
                                                    "name": "age",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": " year(s) old.\\n"
                                                }
                                            ],
                                            "ioType": 8,
                                            "node_type": "IOStmt"
                                        },
                                        {
                                            "node_type": "ReturnStmt",
                                            "returnValue": null
                                        }
                                    ]
                                },
                                "name": "introduce",
                                "node_type": "FunctionDefStmt",
                                "parameters": [],
                                "returnType": "void"
                            }
                        ]
                    },
                    "node_type": "VisibilityBlockStmt",
                    "visibility": 2
                },
                {
                    "block": {
                        "node_type": "BlockStmt",
                        "statements": [
                            {
                                "body": {
                                    "node_type": "BlockStmt",
                                    "statements": [
                                        {
                                            "node_type": "ReturnStmt",
                                            "returnValue": {
                                                "left": {
                                                    "name": "age",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "BinaryOpExpr",
                                                "operator": 21,
                                                "right": {
                                                    "node_type": "NumberLiteralExpr",
                                                    "value": ""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "name": "getAgeInDogYears",
                                "node_type": "FunctionDefStmt",
                                "parameters": [],
                                "returnType": "int"
                            }
                        ]
                    },
                    "node_type": "VisibilityBlockStmt",
                    "visibility": 4
                }
            ]
        },
        {
            "body": {
                "node_type": "BlockStmt",
                "statements": [
                    {
                        "direction": 34,
                        "expressions": [
                            {
                                "node_type": "StringLiteralExpr",
                                "value": "--- Hanami Pet Program Starting ---\\n"
                            }
                        ],
                        "ioType": 8,
                        "node_type": "IOStmt"
                    },
                    {
                        "initializer": null,
                        "node_type": "VariableDeclStmt",
                        "typeName": "string",
                        "varName": "ownerName"
                    },
                    {
                        "initializer": {
                            "node_type": "BooleanLiteralExpr",
                            "value": false
                        },
                        "node_type": "VariableDeclStmt",
                        "typeName": "bool",
                        "varName": "nameIsHanami"
                    },
                    {
                        "initializer": {
                            "node_type": "NumberLiteralExpr",
                            "value": ""
                        },
                        "node_type": "VariableDeclStmt",
                        "typeName": "int",
                        "varName": "calculatedValue"
                    },
                    {
                        "initializer": null,
                        "node_type": "VariableDeclStmt",
                        "typeName": "Pet",
                        "varName": "myDog"
                    },
                    {
                        "expression": {
                            "arguments": [
                                {
                                    "node_type": "StringLiteralExpr",
                                    "value": "Buddy"
                                },
                                {
                                    "node_type": "NumberLiteralExpr",
                                    "value": ""
                                }
                            ],
                            "callee": {
                                "member": {
                                    "name": "setDetails",
                                    "node_type": "IdentifierExpr"
                                },
                                "node_type": "MemberAccessExpr",
                                "object": {
                                    "name": "myDog",
                                    "node_type": "IdentifierExpr"
                                }
                            },
                            "node_type": "FunctionCallExpr"
                        },
                        "node_type": "ExpressionStmt"
                    },
                    {
                        "expression": {
                            "arguments": [],
                            "callee": {
                                "member": {
                                    "name": "introduce",
                                    "node_type": "IdentifierExpr"
                                },
                                "node_type": "MemberAccessExpr",
                                "object": {
                                    "name": "myDog",
                                    "node_type": "IdentifierExpr"
                                }
                            },
                            "node_type": "FunctionCallExpr"
                        },
                        "node_type": "ExpressionStmt"
                    },
                    {
                        "direction": 34,
                        "expressions": [
                            {
                                "node_type": "StringLiteralExpr",
                                "value": "What is your name? "
                            }
                        ],
                        "ioType": 8,
                        "node_type": "IOStmt"
                    },
                    {
                        "direction": 35,
                        "expressions": [
                            {
                                "name": "ownerName",
                                "node_type": "IdentifierExpr"
                            }
                        ],
                        "ioType": 9,
                        "node_type": "IOStmt"
                    },
                    {
                        "branches": [
                            {
                                "body": {
                                    "node_type": "BlockStmt",
                                    "statements": [
                                        {
                                            "direction": 34,
                                            "expressions": [
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": "Welcome, Creator Hanami!\\n"
                                                }
                                            ],
                                            "ioType": 8,
                                            "node_type": "IOStmt"
                                        },
                                        {
                                            "expression": {
                                                "left": {
                                                    "name": "nameIsHanami",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "AssignmentStmt",
                                                "right": {
                                                    "node_type": "BooleanLiteralExpr",
                                                    "value": true
                                                }
                                            },
                                            "node_type": "ExpressionStmt"
                                        },
                                        {
                                            "expression": {
                                                "left": {
                                                    "name": "calculatedValue",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "AssignmentStmt",
                                                "right": {
                                                    "node_type": "NumberLiteralExpr",
                                                    "value": ""
                                                }
                                            },
                                            "node_type": "ExpressionStmt"
                                        }
                                    ]
                                },
                                "condition": {
                                    "left": {
                                        "name": "ownerName",
                                        "node_type": "IdentifierExpr"
                                    },
                                    "node_type": "BinaryOpExpr",
                                    "operator": 24,
                                    "right": {
                                        "node_type": "StringLiteralExpr",
                                        "value": "Hanami"
                                    }
                                }
                            },
                            {
                                "body": {
                                    "node_type": "BlockStmt",
                                    "statements": [
                                        {
                                            "direction": 34,
                                            "expressions": [
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": "Hey, that's my name!\\n"
                                                }
                                            ],
                                            "ioType": 8,
                                            "node_type": "IOStmt"
                                        },
                                        {
                                            "expression": {
                                                "left": {
                                                    "name": "calculatedValue",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "AssignmentStmt",
                                                "right": {
                                                    "node_type": "NumberLiteralExpr",
                                                    "value": ""
                                                }
                                            },
                                            "node_type": "ExpressionStmt"
                                        }
                                    ]
                                },
                                "condition": {
                                    "left": {
                                        "name": "ownerName",
                                        "node_type": "IdentifierExpr"
                                    },
                                    "node_type": "BinaryOpExpr",
                                    "operator": 24,
                                    "right": {
                                        "node_type": "StringLiteralExpr",
                                        "value": "Buddy"
                                    }
                                }
                            },
                            {
                                "body": {
                                    "node_type": "BlockStmt",
                                    "statements": [
                                        {
                                            "direction": 34,
                                            "expressions": [
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": "Nice to meet you, "
                                                },
                                                {
                                                    "name": "ownerName",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                {
                                                    "node_type": "StringLiteralExpr",
                                                    "value": "!\\n"
                                                }
                                            ],
                                            "ioType": 8,
                                            "node_type": "IOStmt"
                                        },
                                        {
                                            "expression": {
                                                "left": {
                                                    "name": "nameIsHanami",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "AssignmentStmt",
                                                "right": {
                                                    "node_type": "BooleanLiteralExpr",
                                                    "value": false
                                                }
                                            },
                                            "node_type": "ExpressionStmt"
                                        },
                                        {
                                            "expression": {
                                                "left": {
                                                    "name": "calculatedValue",
                                                    "node_type": "IdentifierExpr"
                                                },
                                                "node_type": "AssignmentStmt",
                                                "right": {
                                                    "arguments": [],
                                                    "callee": {
                                                        "member": {
                                                            "name": "getAgeInDogYears",
                                                            "node_type": "IdentifierExpr"
                                                        },
                                                        "node_type": "MemberAccessExpr",
                                                        "object": {
                                                            "name": "myDog",
                                                            "node_type": "IdentifierExpr"
                                                        }
                                                    },
                                                    "node_type": "FunctionCallExpr"
                                                }
                                            },
                                            "node_type": "ExpressionStmt"
                                        }
                                    ]
                                },
                                "condition": null
                            }
                        ],
                        "node_type": "BranchStmt"
                    },
                    {
                        "expression": {
                            "left": {
                                "name": "calculatedValue",
                                "node_type": "IdentifierExpr"
                            },
                            "node_type": "AssignmentStmt",
                            "right": {
                                "left": {
                                    "name": "calculatedValue",
                                    "node_type": "IdentifierExpr"
                                },
                                "node_type": "BinaryOpExpr",
                                "operator": 19,
                                "right": {
                                    "node_type": "NumberLiteralExpr",
                                    "value": ""
                                }
                            }
                        },
                        "node_type": "ExpressionStmt"
                    },
                    {
                        "direction": 34,
                        "expressions": [
                            {
                                "node_type": "StringLiteralExpr",
                                "value": "Calculated value: "
                            },
                            {
                                "name": "calculatedValue",
                                "node_type": "IdentifierExpr"
                            },
                            {
                                "node_type": "StringLiteralExpr",
                                "value": "\\n"
                            }
                        ],
                        "ioType": 8,
                        "node_type": "IOStmt"
                    },
                    {
                        "direction": 34,
                        "expressions": [
                            {
                                "node_type": "StringLiteralExpr",
                                "value": "Is owner Hanami? "
                            },
                            {
                                "name": "nameIsHanami",
                                "node_type": "IdentifierExpr"
                            },
                            {
                                "node_type": "StringLiteralExpr",
                                "value": "\\n"
                            }
                        ],
                        "ioType": 8,
                        "node_type": "IOStmt"
                    },
                    {
                        "direction": 34,
                        "expressions": [
                            {
                                "node_type": "StringLiteralExpr",
                                "value": "--- Hanami Pet Program Ending ---\\n"
                            }
                        ],
                        "ioType": 8,
                        "node_type": "IOStmt"
                    },
                    {
                        "node_type": "ReturnStmt",
                        "returnValue": {
                            "node_type": "NumberLiteralExpr",
                            "value": ""
                        }
                    }
                ]
            },
            "name": "mainGarden",
            "node_type": "FunctionDefStmt",
            "parameters": [],
            "returnType": "int"
        }
    ]
}
